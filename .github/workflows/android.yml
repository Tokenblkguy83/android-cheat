name: Android CI with Full Repo Access, Advanced UI Testing, and Modular Plug-and-Play Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write  # Restrict this to steps that need write access only

jobs:
  build:
    name: Build, Test, and Modularize Android Project
    runs-on: ubuntu-latest

    strategy:
      matrix:
        api-level: [30, 33]
        build-tools: ['30.0.3', '33.0.2']

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      # Install required tools
      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ matrix.api-level }}
          build-tools: ${{ matrix.build-tools }}
          ndk: 21.4.7075529

      # Enable Gradle's dependency locking
      - name: Enable Gradle's dependency locking
        run: ./gradlew dependencies --write-locks

      # Enable Gradle's build cache
      - name: Enable Gradle's build cache
        run: echo "org.gradle.caching=true" >> gradle.properties

      # Enable parallel execution of tasks
      - name: Enable parallel execution of tasks
        run: echo "org.gradle.parallel=true" >> gradle.properties

      # Build all modules
      - name: Build all modules
        run: ./gradlew clean assembleDebug

      # Run unit tests for all modules
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      # Run advanced UI tests
      - name: Run UI tests
        run: ./gradlew connectedDebugAndroidTest

      # Lint and code quality checks
      - name: Run lint
        run: ./gradlew lint

      # Modular Plug-and-Play Functionality
      - name: Ensure modular build
        run: |
          echo "Validating modular plug-and-play structure..."
          ./gradlew projects
          for module in $(./gradlew projects | grep -oP 'project :\K[^ ]+'); do
            ./gradlew :$module:build
          done

      # Integrate NSFW detection library
      - name: Integrate NSFW detection
        run: |
          echo "Running NSFW detection..."
          # Add your NSFW detection tool command here
          # Example: ./nsfw-detection-tool --input app/build/outputs/apk/debug/app-debug.apk

      # Handle NSFW detection results
      - name: Handle NSFW detection results
        run: |
          echo "Handling NSFW detection results..."
          # Add your command to handle NSFW detection results here
          # Example: if ./nsfw-detection-tool --input app/build/outputs/apk/debug/app-debug.apk | grep -q "NSFW"; then exit 1; fi

      # Implement copy functionality
      - name: Copy APKs to specific location
        run: |
          echo "Copying APKs to specific location..."
          mkdir -p copied-apks
          cp app/build/outputs/apk/debug/*.apk copied-apks/

      # Upload artifacts (APKs from all modules)
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Modular APKs
          path: |
            app/build/outputs/**/*.apk
            */build/outputs/**/*.apk  # Dynamic for all modules
